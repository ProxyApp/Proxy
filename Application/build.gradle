apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'hugo'
apply plugin: 'android-apt'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    // Version Info
    def versionMajor = 0
    def versionMinor = 1
    def versionPatch = 0
    def versionBuild = 0 // bump for dogfood builds, public betas, etc.

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 22
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    signingConfigs {
        release {
            if (project.rootProject.file('local.properties').exists()) {
                Properties properties = new Properties()
                properties.load(project.rootProject.file('local.properties').newDataInputStream())
                def keystore_password = properties.getProperty('KEYSTORE_PASSWORD', null)
                def key_alias = properties.getProperty('KEY_ALIAS', null)
                def key_password = properties.getProperty('KEY_PASSWORD', null)

                storeFile file("proxy.jks")
                storePassword keystore_password
                keyAlias key_alias
                keyPassword key_password
            }
        }
    }

    buildTypes {
        debug {
            // disable crashlytics
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }
        release {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // enable crashlytics
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = true
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError true
        disable 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
//        duplicate files in Butterknife and Realm?
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    def isTravis = "true".equals(System.getenv("TRAVIS"))
    def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

    dexOptions {
        javaMaxHeapSize "4g"
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis
    }
}

afterEvaluate {
    initCrashlyticsPropertiesIfNeeded()
}

def initCrashlyticsPropertiesIfNeeded() {
    def propertiesFile = file('crashlytics.properties')
    if (!propertiesFile.exists()) {
        def commentMessage = "This is autogenerated crashlytics property from system environment to prevent key to be committed to source control."
        ant.propertyfile(file: "crashlytics.properties", comment: commentMessage) {
            entry(key: "apiSecret", value: CRASHLYTICS_API_SECRET)
            entry(key: "apiKey", value: CRASHLYTICS_API_KEY)
        }
    }
}

dependencies {
    //Local
    compile fileTree(dir: 'libs', include: '*.jar')
    //Google
    compile 'com.google.android.gms:play-services-plus:7.5.0'
    compile 'com.google.android.gms:play-services-analytics:7.5.0'
    compile 'com.google.android.gms:play-services-identity:7.5.0'
    //Android
    compile 'com.android.support:design:+'
    compile 'com.android.support:support-v4:+'
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.android.support:recyclerview-v7:+'
    compile 'com.android.support:palette-v7:+'
    //Square
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    //Third party
    compile 'com.github.frankiesardo:auto-parcel:0.3'
    apt 'com.github.frankiesardo:auto-parcel-processor:0.3'
    compile 'io.realm:realm-android:0.80.3'
    compile 'com.firebase:firebase-client-android:2.3.0'
    compile 'io.reactivex:rxjava:1.0.11'
    compile 'io.reactivex:rxandroid:0.24.0'
    compile 'com.caverock:androidsvg:1.2.2-beta-1'
    //Bug Tracking
    compile('com.crashlytics.sdk.android:crashlytics:2.3.2@aar') {
        transitive = true;
    }
}
